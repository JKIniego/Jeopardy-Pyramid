This uniformed search algorithm stores only the current path it is pursuing, making its space complexity a linear function of the depth, O(bd)#What is the main drawback of the Breadth-First Search?#How would you compare the space complexity of Depth-First Search and Breadth-First Search?#What are the two main classifications of search processes in AI?#How would you classify an uninformed search algorithm?
This exhaustive search algorithm guarantees finding a solution if one exists and can find the minimal one requiring the fewest steps, but its memory requirement, O(bd), is a significant drawback.#What conclusion can you draw about the completeness and optimality of Breadth-First Search?#What are the parts of the Breadth-First Search algorithm?#What is the function of an uninformed search algorithm#What is the relationship between Breadth-First Search and an infinite loop problem?
This heuristic search technique combines the advantages of depth-first and breadth-first search by following a single path but switching to a more promising one based on a heuristic evaluation function.#How is Best-First Search related to both depth-first and breadth-first search?#What motive is there for using a heuristic search?#What is the function of a heuristic evaluation function?#How would you classify Best-First Search?
This search algorithm can get stuck on a local maximum, a plateau, or a ridge, which are its three well-known drawbacks.#What are the features of problems associated with Hill Climbing?#Why do you think Hill Climbing is described as an irrevocable scheme?#What is the function of the Hill Climbing algorithm?#How would you classify Constraint Satisfaction in relation to Hill Climbing?
This search can be performed in two directions: data-drived from an initial state or goal-driven from a final state, with the choice depending on factors like the branching factor of the search tree.#How would you compare and contrast forward and backward search?#What are the parts or features of a search process?#What is the main advantage of backward search?#What ideas justify choosing one search direction over the other?
This type of search problem is represented by a tree with nodes that are either AND-nodes, requiring all descendant problems to be solved, or OR-nodes, requiring only one to be solved.#What is the function of AND-nodes versus OR-nodes in solving a problem?#How is an AND-OR tree structured?#Can you make a distinction between a search graph and a search tree?#How would you classify the AO* Algorithms?
This search method for optimization problems involves splitting the search space into smaller parts and excluding dominated sets by comparing their upper and lower bounds.#How is the concept of “dominance” used to prune the search space?#What is the function of the Branch-and-Bound search?#What are the parts of the Branch-and-Bound algorithm?#How is Alpha-Beta Pruning related to Branch-and-Bound search?
This search strategy for two-player games maintains two threshold values, alpha and beta, to represent bounds for maximizing and minimizing players, respectively, allowing it to prune branches of the game tree.#How is Alpha-Beta Pruning related to the Minimax strategy?#How would you classify Alpha-Beta Pruning?#What motive is there for using Alpha-Beta Pruning over a standard minimax search?#What is the function of the alpha and beta values in game tree searches?
Breadth-first search (BFS) traverses layer by layer while depth-first search (DFS) traverses through the use of depth of search.#What can you infer from the algorithms in traversing using BFS and DFS?#How can you use BFS and DFS in finding the shortest path from one node to another?#How does BFS contrast with DFS in terms of its space complexity?#Why are both BFS and DFS brute force algorithms?
Hill climbing is an algorithm for finding the global optima of a function utilizing little memory, but it can get stuck on a local optima or traverse infinite uncontrolled paths.#How does the evaluation function relate with the tendency to get stuck at a local optima#What can you infer if the hill climbing algorithm avoids getting stuck at the local optima?#How does backtracking relate to hill climbing?#Why does hill climbing lead to the global optima?